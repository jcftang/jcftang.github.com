<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Jimmy Tang]]></title>
  <link href="http://jcftang.github.com/atom.xml" rel="self"/>
  <link href="http://jcftang.github.com/"/>
  <updated>2012-07-07T12:30:35+01:00</updated>
  <id>http://jcftang.github.com/</id>
  <author>
    <name><![CDATA[Jimmy Tang]]></name>
    <email><![CDATA[jcftang@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Installing Ceph on SL6]]></title>
<link href="http://jcftang.github.com/2012/07/06/installing-ceph-on-sl6/"/>
<updated>2012-07-06T14:43:00+01:00</updated>
<id>http://jcftang.github.com/2012/07/06/installing-ceph-on-sl6</id>

      <content type="html"><![CDATA[<p>As an exercise of a Friday afternoon of not starting something big before
heading off to a conference. I&#8217;ve decided to spend an hour or two at
seeing how ceph is installed and configured on an SL6 based machine
(RHEL6 clone).</p>

<p>The install target is just an old desktop running a 64bit install of SL6x,
so it&#8217;s nothing too fancy.</p>

<p>Following the instructions at <a href="http://ceph.com/wiki/Installing_on_RedHat_or_CentOS">http://ceph.com/wiki/Installing_on_RedHat_or_CentOS</a>, I ended up doing this</p>

<pre><code>yum install yum-conf-epel
yum update
yum gcc gcc-c++ automake libtool expat expat-devel boost-devel nss-devel cryptopp cryptopp-devel libatomic_ops-devel fuse-devel
yum install libedit-devel libedit
</code></pre>

<p>It seems that the packages <em>cryptopp-devel</em>, <em>cryptopp</em> and <em>expat-devel</em>,
<em>expat</em> are the only packages pulled in from the epel repository.</p>

<p>Additional libraries and tools include these weren&#8217;t mentioned in the
upstream wiki, the upstream wiki probably needs to be updated.</p>

<pre><code>yum install rpm-build
yum install libaio-devel libcurl-devel libxml2-devel libuuid-devel keyutils-libs-devel fcgi-devel
</code></pre>

<p>I chose to install the newly designated stable branch of ceph 0.48argonaut</p>

<pre><code>wget http://ceph.com/download/ceph-0.48argonaut.tar.bz2
</code></pre>

<p>I also chose to build it in RPM form, in the tarball there is a RPM spec
file which can be used to create an installable RPM, the following is
a transcript of what I did to build an installable RPM.</p>

<pre><code>tar xjvf ceph-0.48argonaut.tar.bz2
cp ceph-0.48argonaut.tar.bz2 ~/rpmbuild/SOURCES
rpmbuild -ba ceph-0.48argonaut/ceph.spec
</code></pre>

<p>The build will take <em>some</em> time, especially if you are using old
hardware. I ran into some minor packaging issues,</p>

<pre><code>diff -u ceph.spec.in.orig ceph.spec.in
--- ceph.spec.in.orig   2012-07-06 15:38:59.298497719 +0100
+++ ceph.spec.in    2012-07-06 15:39:45.423560177 +0100
@@ -326,6 +326,8 @@
/usr/sbin/rcceph
%{_libdir}/rados-classes/libcls_rbd.so*
%{_libdir}/rados-classes/libcls_rgw.so*
+/sbin/ceph-disk-activate
+/sbin/ceph-disk-prepare

#################################################################################
%files fuse
</code></pre>

<p>The above change need&#8217;s to be applied to the <em>ceph</em> spec file for the
RPM(s) to build successfully.</p>

<pre><code>ceph-0.48argonaut-6.el6.x86_64.rpm
ceph-devel-0.48argonaut-6.el6.x86_64.rpm
python-ceph-0.48argonaut-6.el6.x86_64.rpm
librbd1-0.48argonaut-6.el6.x86_64.rpm
librados2-0.48argonaut-6.el6.x86_64.rpm
ceph-radosgw-0.48argonaut-6.el6.x86_64.rpm
libcephfs1-0.48argonaut-6.el6.x86_64.rpm
ceph-fuse-0.48argonaut-6.el6.x86_64.rpm
</code></pre>

<p>I chose to install <em>all</em> the RPM&#8217;s that were generated for educational
purposes (used yum instead of the rpm commands so the dependancies are
sorted out for me), from the <em>rpmbuild/RPMS/x86_64</em> directory</p>

<pre><code>yum install ceph-0.48argonaut-6.el6.x86_64.rpm ceph-devel-0.48argonaut-6.el6.x86_64.rpm ceph-fuse-0.48argonaut-6.el6.x86_64.rpm ceph-radosgw-0.48argonaut-6.el6.x86_64.rpm libcephfs1-0.48argonaut-6.el6.x86_64.rpm librados2-0.48argonaut-6.el6.x86_64.rpm librbd1-0.48argonaut-6.el6.x86_64.rpm python-ceph-0.48argonaut-6.el6.x86_64.rpm
</code></pre>

<p>I then simply followed the 5 minute quick start guide at
<a href="http://ceph.com/docs/master/start/quick-start/">http://ceph.com/docs/master/start/quick-start/</a> to see if ceph would
start up. There is more documentation at <a href="http://ceph.com/docs/master">http://ceph.com/docs/master</a>
that I have yet to go through. Perhaps the configuration of ceph can go
into another post.</p>

<p>To start the cluster after it&#8217;s configured</p>

<pre><code>service ceph -a start
</code></pre>

<p>However on my test system it&#8217;s currently crashing out with the mds server giving the followin errors</p>

<pre><code>2012-07-06 16:38:17.838055 7f2d6828d700 -1 mds.-1.0 *** got signal Terminated ***
2012-07-06 16:38:17.838139 7f2d6828d700  1 mds.-1.0 suicide.  wanted down:dne, now up:boot
2012-07-06 16:38:17.839020 7f2d6828d700 -1 osdc/Objecter.cc: In function 'void Objecter::shutdown()' thread 7f2d6828d700 time 2012-07-06 16:38:17.838156
osdc/Objecter.cc: 221: FAILED assert(initialized)

 ceph version 0.48argonaut (commit:c2b20ca74249892c8e5e40c12aa14446a2bf2030)
 1: (Objecter::shutdown()+0x170) [0x6e2e20]
 2: (MDS::suicide()+0xc9) [0x4ad829]
 3: (MDS::handle_signal(int)+0x1bb) [0x4b447b]
 4: (SignalHandler::entry()+0x283) [0x803d53]
 5: /lib64/libpthread.so.0() [0x3b3ea077f1]
 6: (clone()+0x6d) [0x3b3e6e5ccd]
 NOTE: a copy of the executable, or `objdump -rdS &lt;executable&gt;` is needed to interpret this.

--- begin dump of recent events ---
    -3&gt; 2012-07-06 16:37:57.786954 7f2d6b496760  0 ceph version 0.48argonaut (commit:c2b20ca74249892c8e5e40c12aa14446a2bf2030), process ceph-mds, pid 12537
    -2&gt; 2012-07-06 16:38:17.838055 7f2d6828d700 -1 mds.-1.0 *** got signal Terminated ***
    -1&gt; 2012-07-06 16:38:17.838139 7f2d6828d700  1 mds.-1.0 suicide.  wanted down:dne, now up:boot
     0&gt; 2012-07-06 16:38:17.839020 7f2d6828d700 -1 osdc/Objecter.cc: In function 'void Objecter::shutdown()' thread 7f2d6828d700 time 2012-07-06 16:38:17.838156
osdc/Objecter.cc: 221: FAILED assert(initialized)

 ceph version 0.48argonaut (commit:c2b20ca74249892c8e5e40c12aa14446a2bf2030)
 1: (Objecter::shutdown()+0x170) [0x6e2e20]
 2: (MDS::suicide()+0xc9) [0x4ad829]
 3: (MDS::handle_signal(int)+0x1bb) [0x4b447b]
 4: (SignalHandler::entry()+0x283) [0x803d53]
 5: /lib64/libpthread.so.0() [0x3b3ea077f1]
 6: (clone()+0x6d) [0x3b3e6e5ccd]
 NOTE: a copy of the executable, or `objdump -rdS &lt;executable&gt;` is needed to interpret this.

--- end dump of recent events ---
2012-07-06 16:38:17.840237 7f2d6828d700 -1 *** Caught signal (Aborted) **
 in thread 7f2d6828d700

 ceph version 0.48argonaut (commit:c2b20ca74249892c8e5e40c12aa14446a2bf2030)
 1: /usr/bin/ceph-mds() [0x803309]
 2: /lib64/libpthread.so.0() [0x3b3ea0f4a0]
 3: (gsignal()+0x35) [0x3b3e632885]
 4: (abort()+0x175) [0x3b3e634065]
 5: (__gnu_cxx::__verbose_terminate_handler()+0x12d) [0x3b432bea7d]
 NOTE: a copy of the executable, or `objdump -rdS &lt;executable&gt;` is needed to interpret this.

--- begin dump of recent events ---
     0&gt; 2012-07-06 16:38:17.840237 7f2d6828d700 -1 *** Caught signal (Aborted) **
 in thread 7f2d6828d700

 ceph version 0.48argonaut (commit:c2b20ca74249892c8e5e40c12aa14446a2bf2030)
 1: /usr/bin/ceph-mds() [0x803309]
 2: /lib64/libpthread.so.0() [0x3b3ea0f4a0]
 3: (gsignal()+0x35) [0x3b3e632885]
 4: (abort()+0x175) [0x3b3e634065]
 5: (__gnu_cxx::__verbose_terminate_handler()+0x12d) [0x3b432bea7d]
 NOTE: a copy of the executable, or `objdump -rdS &lt;executable&gt;` is needed to interpret this.

--- end dump of recent events ---
</code></pre>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/07/06/installing-ceph-on-sl6/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Thoughts on using the likes of tahoe-lafs and git-annex as a backend storage system for Digital Preservation]]></title>
<link href="http://jcftang.github.com/2012/07/05/thoughts-on-using-the-likes-of-tahoe-lafs-and-git-annex-as-a-backend-storage-system-for-digital-preservation/"/>
<updated>2012-07-05T15:29:00+01:00</updated>
<id>http://jcftang.github.com/2012/07/05/thoughts-on-using-the-likes-of-tahoe-lafs-and-git-annex-as-a-backend-storage-system-for-digital-preservation</id>

      <content type="html"><![CDATA[<p>Having happily running and using both git-annex and tahoe-lafs in the
past year or so to manage my files and backups. I&#8217;ve been thinking
about plugging in tahoe-lafs as a backend driver for iRODS. I never
quite got around to doing it properly, I had only gotten the universal
mass storage driver to talk to tahoe-lafs. I was planning on writing
an MSO driver for iRODS to talk to tahoe-lafs&#8217;s web-api, but alas I
never got around to it. I need to get some interns to do it next year!</p>

<p>It&#8217;s still highly attractive to have tahoe-lafs at the storage backend
due to its erasure coding capabilities to maximise a return on
investment in the storage infrastructure. I&#8217;m not sure if anyone has
really tried to use something like tahoe-lafs as a backend for digital
preservation.</p>

<p>There are a few niggling issues with tahoe-lafs which may prevent one
from using it in digital preservation, one is the lack of
precedence. Someone needs to take a first step at trying to see if it
works or not. Personally I would like to see the multi-introducer work
to be production ready and released, this would hugely increase the
availability of a tahoe-lafs grid and would mitigate the need for
trying make one introducer node highly available and redundant and of
course local network performance could be better. I&#8217;ve never really
been able to get more than 10-20mbit/s out of a download/upload. If my
transfers are queued up and running in the background it&#8217;s not a major
issue.</p>

<p>Which brings me to git-annex, all the new fancy features that the
author of git-annex has been adding has been fantastic. I&#8217;ve setup a
&#8220;target&#8221; which is a tahoe-lafs grid which I use a replica set for one
of my annex&#8217;d collection of files. It&#8217;s not the fastest thing in the
world for transfers but at least I know my data is safe in at least
two places.</p>

<p>Having used git-annex happily for the past while and being interested
in the S3 and SWIFT interfaces that git-annex is able to talk to has
made me wonder if it&#8217;s a good idea to try and create a fedora-commons
backend/remote for git-annex or a real tahoe-lafs backend/remote that
doesn&#8217;t rely on the general hook system that git-annex already
has. Also the Internet Archive provides an S3/SWIFT like interface.</p>

<p>Or would it be better to go the other way around and try using
git-annex as a type of interface to other backend storage systems for
fedora-commons, I wish I had more time to poke the akubra
interface/package in fedora-commons.</p>

<p>The above is just a rant and my brain spewing random stuff out in the
afternoon after thinking about the OR2012 developer challenge.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/07/05/thoughts-on-using-the-likes-of-tahoe-lafs-and-git-annex-as-a-backend-storage-system-for-digital-preservation/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Ceph V0.48 “ARGONAUT” RELEASED &rarr;]]></title>
<link href="http://ceph.com/releases/v0-48-argonaut-released/"/>
<updated>2012-07-05T09:54:00+01:00</updated>
<id>http://jcftang.github.com/2012/07/05/ceph-v0-dot-48-argonaut-released</id>

      <content type="html"><![CDATA[<p>I&#8217;ve been eyeing this Ceph storage system for a while for a number of
potential uses, it looks like its finally ready for production usage.</p>

<p>It is a pitty that the cephfs component isn&#8217;t recommended for
production usage yet. Still, Ceph is really going to shake up the
distributed storage industry. Having used GPFS, Lustre and a few other
systems in production in the past, Ceph certainly looks attractive.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/07/05/ceph-v0-dot-48-argonaut-released/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[tahoe-lafs 1.9.2 is released &rarr;]]></title>
<link href="https://tahoe-lafs.org/trac/tahoe-lafs/wiki/Installation"/>
<updated>2012-07-05T09:47:00+01:00</updated>
<id>http://jcftang.github.com/2012/07/05/tahoe-lafs-1-dot-9-2-is-released</id>

      <content type="html"><![CDATA[<p>I&#8217;ve been happily using <a href="http://www.tahoe-lafs.org">tahoe-lafs</a> for my
backup needs for a while now in work. It&#8217;s not a huge cluster, but just
a small hive cache from workstations dotted around the lab.</p>

<p>The project recently did a release which fixes a number of bugs and
issues which has made this software much more pleasant to use. I&#8217;ve
also been happily using git-annex to manage my files which reside in
tahoe-lafs.</p>

<p>At somepoint I need to write a tahoe-lafs backend/remote for git-annex,
or at least convince the git-annex author to write one!</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/07/05/tahoe-lafs-1-dot-9-2-is-released/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Using git-daemon to share your git repo on a trusted LAN]]></title>
<link href="http://jcftang.github.com/2012/07/02/using-git-daemon-to-share-your-git-repo-on-a-trusted-lan/"/>
<updated>2012-07-02T12:05:00+01:00</updated>
<id>http://jcftang.github.com/2012/07/02/using-git-daemon-to-share-your-git-repo-on-a-trusted-lan</id>

      <content type="html"><![CDATA[<p>One of the things that I don&#8217;t like about <a href="http://git-scm.com/">git</a> is
the interface at times can be too geared towards power users. One command
that I particularly like in <a href="http://mercurial.selenic.com/">mercurial</a>
is the <em>hg serve</em> command, which is incredibly easy to use.</p>

<p>To do the equivalent of the <em>hg serve</em> in <em>git</em> you can do the following&#8230;</p>

<pre><code>user$ cd my-repo
user$ git daemon --export-all --base-path=$(pwd)
</code></pre>

<p>The above assumes you are on a trusted network and you want to share
your repo with people on your LAN and you are in the toplevel directory
of the repository that you want to temporarily share. If you&#8217;re lazy
you could do&#8230;</p>

<pre><code>user$ git config --global alias.serve 'daemon --reuseaddr --verbose  --base-path=. --export-all ./.git'
</code></pre>

<p>Which would place the following (or similar) in your ~/.gitconfig file</p>

<pre><code>[alias]
    serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
</code></pre>

<p>The above was taken from <a href="https://git.wiki.kernel.org/index.php/Aliases">https://git.wiki.kernel.org/index.php/Aliases</a></p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/07/02/using-git-daemon-to-share-your-git-repo-on-a-trusted-lan/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[git-annex assistant is making leaps and bounds &rarr;]]></title>
<link href="http://git-annex.branchable.com/design/assistant/"/>
<updated>2012-06-26T19:10:00+01:00</updated>
<id>http://jcftang.github.com/2012/06/26/git-annex-assistant-is-making-leaps-and-bounds</id>

      <content type="html"><![CDATA[<p>I&#8217;ve been following the development of the new <em>git-annex assistant</em>
work that Joey Hess has been working on over the past few weeks. Even
in this early state of development, it is slowly becoming more usable
and accessible for less technical users.</p>

<p>As soon as as the
<a href="http://git-annex.branchable.com/bugs/Issue_on_OSX_with_some_system_limits/">issues with the limitations of <em>kqueue</em> and OSX&#8217;s silly limits</a>
are resolved (without the need for a user to do a <em>sysctl -w
WHATEVER</em>) it will be pretty cool.</p>

<p>I&#8217;ve been throwing small batches of data at a newly setup <em>annex</em>&#8216;d
repository and it&#8217;s been handling it well enough for me to constantly
test the various development branch. Kudos to Joey for being so
responsive to fixing bugs during development.</p>

<p>For those that care go to
<a href="http://git-annex.branchable.com/design/assistant/blog/">http://git-annex.branchable.com/design/assistant/blog/</a> and follow
the development of this cool tool</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/06/26/git-annex-assistant-is-making-leaps-and-bounds/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Octopress 2.1, taking a sneak peek &rarr;]]></title>
<link href="https://github.com/imathis/octopress/tree/2.1"/>
<updated>2012-06-18T22:27:00+01:00</updated>
<id>http://jcftang.github.com/2012/06/18/octopress-2-dot-1-taking-a-sneak-peek</id>

      <content type="html"><![CDATA[<p>I feel lucky and living on the edge and I&#8217;ve recently decided to take
a preview of the 2.1 branch of octopress. So far Octopress has been
pretty good, it&#8217;s been a refreshing change to the usual ikiwiki system
that I prefer. This experiment has worked out not too bad for me given
how much I like ikiwiki for most of if not all of my other little
websites and documentation sites.</p>

<p>It&#8217;s not quite there yet, there a few theme issues which are probably
to be fixed. At least if I adopt it now there will be less conflicts
for me to resolve later on. Out of all the features that 2.1 will
bring that I like the most is the linklog feature. I&#8217;ve been using the
linklog feature for a few months now and it works pretty well.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/06/18/octopress-2-dot-1-taking-a-sneak-peek/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Top500 Supercomputers for Summer 2012 &rarr;]]></title>
<link href="http://top500.org/lists/2012/06/press-release"/>
<updated>2012-06-18T20:26:00+01:00</updated>
<id>http://jcftang.github.com/2012/06/18/top500-supercomputers-for-summer-2012</id>

      <content type="html"><![CDATA[<p>The Top 500 List is out! It&#8217;s been no surprise that LLNL and IBM has
reclaimed the top spot. There is some pretty cool tech that&#8217;s going to
come out of these systems which the HPC community should be rubbing
their hands over.</p>

<p><a href="http://www.schedmd.com">Slurm</a> will be moving along development for
these big systems as well as <a href="http://www.whamcloud.com">Lustre</a> and
<a href="http://zfsonlinux.org/">zfs on linux</a>.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/06/18/top500-supercomputers-for-summer-2012/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Installing git-annex on SL5]]></title>
<link href="http://jcftang.github.com/2012/06/15/installing-git-annex-on-sl5/"/>
<updated>2012-06-15T12:55:00+01:00</updated>
<id>http://jcftang.github.com/2012/06/15/installing-git-annex-on-sl5</id>

      <content type="html"><![CDATA[<p>I was waiting for my backups to be done hence this post, as I was using
<em>git-annex</em> to manage my files and I decided I needed to have
git-annex on a SL5 based machine. SL5 is just an opensource
clone/recompile of RHEL5.</p>

<p>I haven&#8217;t tried to install the newer versions of Haskell Platform and
GHC in a while on SL5 to instal git-annex. But the last time I checked
when GHC7 was out, it was a pain to install GHC on SL5.</p>

<p>However I have discovered that someone has gone through the trouble of
packaging up GHC and Haskell Platform for RHEL based distros.</p>

<ul>
<li><a href="http://justhub.org/download">http://justhub.org/download</a> - Packaged GHC and Haskell Platform
RPM&#8217;s for RHEL based systems.</li>
</ul>


<p>I&#8217;m primarily interested in installing <em>git-annex</em> on SL5 based
systems. The installation process goes as such&#8230;</p>

<p>First install GHC and Haskell Platform (you need root for these
following steps)</p>

<pre><code>$ wget http://sherkin.justhub.org/el5/RPMS/x86_64/justhub-release-2.0-4.0.el5.x86_64.rpm
$ rpm -ivh justhub-release-2.0-4.0.el5.x86_64.rpm
$ yum install haskell
</code></pre>

<p>The RPM&#8217;s don&#8217;t place the files in /usr/bin, so you must add the
following to your .bashrc (from here on you don&#8217;t need root if you
don&#8217;t want things to be system wide)</p>

<pre><code>$ export PATH=/usr/hs/bin:$PATH
</code></pre>

<p>On SL5 pcre is at version 6.6 which is far too old for one of the
dependancies that git-annex requires. Therefore the user must install
an updated version of <em>pcre</em> either from source or another method, I
chose to install it from source and by hand into /usr/local</p>

<pre><code>$ wget http://sourceforge.net/projects/pcre/files/pcre/8.30/pcre-8.30.tar.gz/download
$ tar zxvf pcre-8.30.tar.gz
$ cd pcre-8.30
$ ./configure
$ make &amp;&amp; make install
</code></pre>

<p>Once the packages are installed and are in your execution path, using
cabal to configure and build git-annex just makes life easier, it
should install all the needed dependancies.</p>

<pre><code>$ cabal update
$ cabal install pcre-light --extra-include-dirs=/usr/local/include
$ git clone git://git.kitenet.net/git-annex
$ cd git-annex
$ make git-annex.1
$ cabal configure
$ cabal build
$ cabal install
</code></pre>

<p>Or if you want to install it globallly for everyone (otherwise it will
get installed into $HOME/.cabal/bin)</p>

<pre><code>$ cabal install --global
</code></pre>

<p>The above will take a while to compile and install the needed
dependancies. I would suggest any user who does should run the tests
that comes with git-annex to make sure everything is functioning as
expected.</p>

<p>I wonder if it&#8217;s possible to get git-annex as a back-end driver for
some of the digital preservation systems out there. Or more
interestingly can fedora-commons be used a special remote or back-end
for git-annex.</p>

<p>I haven&#8217;t had a chance or need to install git-annex on a SL6 based
system yet, but I would assume something similar to the above steps
would be required to do so.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/06/15/installing-git-annex-on-sl5/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[DRIS Workflows is now available via npm]]></title>
<link href="http://jcftang.github.com/2012/06/13/dris-workflows-is-now-available-via-npm/"/>
<updated>2012-06-13T13:59:00+01:00</updated>
<id>http://jcftang.github.com/2012/06/13/dris-workflows-is-now-available-via-npm</id>

      <content type="html"><![CDATA[<p>I&#8217;ve just uploaded the work that Matthias and Quirijn did over the
past few months to the npm registry</p>

<ul>
<li><a href="http://search.npmjs.org/#/dri-api">http://search.npmjs.org/#/dri-api</a></li>
<li><a href="http://search.npmjs.org/#/dris-workflows">http://search.npmjs.org/#/dris-workflows</a></li>
<li><a href="http://search.npmjs.org/#/dri">http://search.npmjs.org/#/dri</a></li>
<li><a href="http://search.npmjs.org/#/fedora">http://search.npmjs.org/#/fedora</a></li>
</ul>


<p>I haven&#8217;t tried installing it from the npm repository yet, I assume
that they will work. There&#8217;s still some cosmetic work (needs to be
branded correctly) that needs to be done as well as lots of error
checking, validation and testing. It&#8217;s not a bad place to be starting
to look for ideas if you are interested in building your own system to
interface with Fedora Commons.</p>

<p>Just remember the above is just a prototype that we thought would be
good to share with the world!.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/06/13/dris-workflows-is-now-available-via-npm/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Facebook - Open House]]></title>
<link href="http://jcftang.github.com/2012/06/07/facebook-open-house/"/>
<updated>2012-06-07T09:12:00+01:00</updated>
<id>http://jcftang.github.com/2012/06/07/facebook-open-house</id>

      <content type="html"><![CDATA[<p>The event was actually on 2012-06-06 and it was invite only. The event
was mostly about the infrastructure of Facebook. It was actually done
quite tastefully with a main speaker giving an overview of the whole
system. Luckily they did not turn the event into a recruitment event
which was quite pleasant.</p>

<p>Unfortunately one of the posters that I had actually want to see and
chat to the engineers involved wasn&#8217;t there, there were enough
engineers around for me to harass with questions.</p>

<p>This event was also the first event that I have been to in Dublin
which required an NDA, that was sort of strange. Some people that I
know didn&#8217;t attend as a result of the NDA.</p>

<p>All in all Facebook does have some pretty cool tech internally (like
all the other big dotcom companies). Some of it is even opensource!</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/06/07/facebook-open-house/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[DCC Roadshow N. Ireland &rarr;]]></title>
<link href="http://www.dcc.ac.uk/events/data-management-roadshows/dcc-roadshow-n-ireland"/>
<updated>2012-06-06T14:16:00+01:00</updated>
<id>http://jcftang.github.com/2012/06/06/dcc-roadshow-n-ireland</id>

      <content type="html"><![CDATA[<p>The 12th DCC regional roadshow will take place on 6th and 7th June at
the McClay library, Queen&#8217;s University Belfast.</p>

<p>The roadshow is being organised in conjunction with Queen&#8217;s University
Belfast.</p>

<p>Turns out to be far more informative than I originally thought. Lot&#8217;s
of real life examples of what people are doing and what&#8217;s
relavent. It&#8217;s not the usual workshop, conference or meeting that I
would attend.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/06/06/dcc-roadshow-n-ireland/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[git-annex assistant is being crowd funded on Kickstarter &rarr;]]></title>
<link href="http://git-annex.branchable.com/design/assistant/"/>
<updated>2012-06-04T11:50:00+01:00</updated>
<id>http://jcftang.github.com/2012/06/04/git-annex-assistant-is-being-crowd-funded-on-kickstarter</id>

      <content type="html"><![CDATA[<p>It seems <a href="http://kitenet.net/~joey/">Joey Hess</a> is in the process of
getting <strong>git-annex assistant</strong> crowd funded. I had not been keeping
up to date too much in the last year with git-annex partly because it
met my needs and I never needed to upgrade to the latest tip.</p>

<p>There are a number of really cool features now which is making
git-annex more accessible. I particularly like how the merge and sync
workflows have now been pretty much <em>scripted</em> so there is less to go
wrong!</p>

<p>Once the <strong>Dropbox</strong> like features get implemented git-annex will be
pretty interesting, it won&#8217;t be a complete <em>clone</em> of Dropbox due to
the way that git-annex deals with files (using symlinks), it will be a
pretty good alternative to Dropbox. I wish <em>smudge filters</em> were on
the roadmap as well.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/06/04/git-annex-assistant-is-being-crowd-funded-on-kickstarter/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[DRIS Workflows just got uploaded to github]]></title>
<link href="http://jcftang.github.com/2012/05/21/dris-workflows-just-got-uploaded-to-github/"/>
<updated>2012-05-21T21:19:00+01:00</updated>
<id>http://jcftang.github.com/2012/05/21/dris-workflows-just-got-uploaded-to-github</id>

      <content type="html"><![CDATA[<p>After almost 3 months supervising and working with two interns I&#8217;ve
finally uploaded their work under the GPLv2 License.</p>

<ul>
<li><a href="https://github.com/jcftang/dri-api">https://github.com/jcftang/dri-api</a></li>
<li><a href="https://github.com/jcftang/dris-workflows">https://github.com/jcftang/dris-workflows</a></li>
<li><a href="https://github.com/jcftang/dris-workflows-site">https://github.com/jcftang/dris-workflows-site</a></li>
<li><a href="https://github.com/jcftang/node-dri">https://github.com/jcftang/node-dri</a></li>
<li><a href="https://github.com/jcftang/node-fedora">https://github.com/jcftang/node-fedora</a></li>
</ul>


<p>Please note that the packages above do not represent DRI at all, they
just ended up getting labelled that way for whatever reason.</p>

<p>So what are the above packages? Well they are an attempt at creating a
workflow for the DRIS team in TCD who work on digital preservation,
digitisation, cataloging and a host of other tasks which I probably
don&#8217;t know about.</p>

<p>The prototype system consists of the DRIS Workflows package and the
API server. The system currently target the problem of ingesting
objects. It tries to map what the librarians/archivists at TCD are
doing to a single interface to increase throughput and quality of the
work (amongst other things).</p>

<p>It&#8217;s also able to export the internal meta-data as Dublin-Core, it&#8217;s
not great right now and requires more work and there is a small start
made on MODS as well. It does demonstrate what the interns managed to
achieve in 3 months time with a loose spec on what needed to be
done. The basic design and architecture of the system isn&#8217;t too
different from Hydra, it was very much by accident that we ended up
some similar ideas.</p>

<p>The primary purpose of this post is to share the code! and as per
usual, hope someone finds it useful.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/05/21/dris-workflows-just-got-uploaded-to-github/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[ceph gets a refresh &rarr;]]></title>
<link href="http://ceph.com/community/announcing-the-ceph-com-refresh/"/>
<updated>2012-05-19T13:08:00+01:00</updated>
<id>http://jcftang.github.com/2012/05/19/ceph-gets-a-refresh</id>

      <content type="html"><![CDATA[<p>I&#8217;ve been keeping an eye on <em>ceph</em> for quite sometime now. It looks
like <em>ceph</em> is almost ready for production usage. There is now a
support infrastructure and a commercial company backing the
product. So far the OSD, MDS and MON components all run on Linux since
most of the implementation appears to be in the user land I wonder if
it will be ported to non-linux platforms. It&#8217;s be quite nifty if one
could have a heterogeneous network of servers providing storage.</p>

<p>From first glance at shadowing one of the guys in work with this
filesystem, it looks good. It&#8217;s missing some documentation right now
apart from that it&#8217;s going to be a great competitor in the distributed
filesystems arena. It will shake up GPFS and Lustre for sure, it might
even give glusterfs a run for its money in the near future.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/05/19/ceph-gets-a-refresh/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Is JAVA really the only game in town for building Digital Preservation Systems?]]></title>
<link href="http://jcftang.github.com/2012/05/16/is-java-really-the-only-game-in-town-for-building-digital-preservation-systems/"/>
<updated>2012-05-16T18:24:00+01:00</updated>
<id>http://jcftang.github.com/2012/05/16/is-java-really-the-only-game-in-town-for-building-digital-preservation-systems</id>

      <content type="html"><![CDATA[<p>In the world of digital preservation and repositories it seems that
there is primarily fedora-commons, dspace, eprints and one or two
other solutions out there for building up digital preservation
systems. The one that really stands out as a framework and toolkit for
building bigger and more complex systems is fedora-commons.</p>

<p>It also happens to be written in JAVA and is a fairly big and complex
system which implements best-practices for storing digital objects
with the sole purpose of preservation. In one of the projects that I
have been working with some interns at work; we have treated
fedora-commons as just storage system where we interface to the
preservation repository via the available REST api.</p>

<p>By using the API it was possible to use node.js to implement the
servers which contained all the business logic. Project Hydra does
something similar or rather we are doing something similar to Project
Hydra, by accident much to my suprise. Hydra uses Ruby on Rails for
its middleware implementation, there doesn&#8217;t seem to be much JAVA
there either.</p>

<p>I get the feeling that this decoupled approach with REST servers and
clients to be pretty attractive to anyone who wishes to implement
these types systems. It is interesting to see that the applications
aren&#8217;t being written in JAVA. At least that is what I can see with the
projects that use Hydra (which is sort of the point). Maybe good
enough practice is fine for most use cases.</p>

<p>This makes me wonder how many digital preservation projects out there
really use 100% JAVA up to delivery to the client? How many projects
out there are really just mashups of different types of technology
(well planned mashups). Is it because of &#8220;best practice&#8221; for
implementing enterprise applications that JAVA gets so much focus and
attention?</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/05/16/is-java-really-the-only-game-in-town-for-building-digital-preservation-systems/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[git-subtree is now in mainline git]]></title>
<link href="http://jcftang.github.com/2012/05/02/git-subtree-is-now-in-mainline-git/"/>
<updated>2012-05-02T09:27:00+01:00</updated>
<id>http://jcftang.github.com/2012/05/02/git-subtree-is-now-in-mainline-git</id>

      <content type="html"><![CDATA[<p>It seems that <a href="git://github.com/apenwarr/git-subtree.git">git-subtree</a>
has been merged into the mainline git project. <em>git-subtree</em> is one of
those really useful wrappers for manipulating git repositories if you
are an integrator or don&#8217;t really like git-submodule. It certainly is
a nicer alternative to git-submodule. There is less chance of the
person cloning a git-subtree repository messing up the checkout because
they forgot to initialise the submodules. There is also the added
advantage of not needing to fiddle around scripting up the git-archive
commands for exporting the source tree for a release if you use
git-subtree; actually git-subtree is just plain useful.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/05/02/git-subtree-is-now-in-mainline-git/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Slurm User Group Meeting 2012 &rarr;]]></title>
<link href="http://www.bsc.es/marenostrum-support-services/hpc-events-trainings/others/slurm-user-group-meeting-2012"/>
<updated>2012-04-30T20:19:00+01:00</updated>
<id>http://jcftang.github.com/2012/04/30/slurm-user-group-meeting-2012</id>

      <content type="html"><![CDATA[<p>This time the usergroup meeting is in BSC in Spain (this place is
cool, I&#8217;ve been at BSC for a few conferences and meetings before). I
wish I was doing some HPC right now, I&#8217;m very tempted to submit an
abstract or two on the last two things with slurm that I was involved
with.</p>

<p>The <a href="https://github.com/jcftang/php-slurm">php-slurm</a> package needs
some love, its somewhat in use at work. I just wish I had more time to
fix the memory leaks. There is also
<a href="https://github.com/jcftang/slurm-bank">slurm-bank</a> which is seeing
some good use in work, though it could do with a rewrite in C.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/04/30/slurm-user-group-meeting-2012/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[MOSH - An alternative to SSH &rarr;]]></title>
<link href="http://mosh.mit.edu/"/>
<updated>2012-04-17T08:31:00+01:00</updated>
<id>http://jcftang.github.com/2012/04/17/mosh-an-alternative-to-ssh</id>

      <content type="html"><![CDATA[<p>This tool hasn&#8217;t been around for too long, but long enough to make it
into quite a few distros. It looks like it&#8217;s a good alternative to
<em>autossh</em> and <em>tmux</em> which I have been using for the past few
years. Like many new tools like this, if it&#8217;s not around everywhere
it&#8217;s not as useful as it could be.</p>

<p>The only minor criticism of the application is that the <em>mosh</em> command
itself is written in perl, it would be nicer if the wrapper command
would be written in C/C++ like the rest of the application. It would
certainly make it more <em>portable</em>. I guess I should shut up or write
my own mosh wrapper replacement.</p>

<p>Other than that, I&#8217;ve got it installed on one or two machines and it
seems nice enough so far. I now need to test it out in the field on a
bad connection when I&#8217;m away at a team meeting. I&#8217;m still not entirely
sure of how good or bad it is in terms of security compared to <em>SSH</em>.</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/04/17/mosh-an-alternative-to-ssh/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Arquillian 1.0.0.Final released! Ready for GlassFish and WebLogic! Death to all bugs! &rarr;]]></title>
<link href="http://www.javacodegeeks.com/2012/04/arquillian-100final-released-ready-for.html"/>
<updated>2012-04-16T09:25:00+01:00</updated>
<id>http://jcftang.github.com/2012/04/16/arquillian-1-dot-0-0-dot-final-released-ready-for-glassfish-and-weblogic-death-to-all-bugs</id>

      <content type="html"><![CDATA[<p>Looks like an interesting and useful tool, must take note of this tool
for later use to kill all bugs that are found in the projects that we
work on, well java ones at least.</p>

<p>Anything to help squash bugs is good!</p>
<p><a rel="bookmark" href="http://jcftang.github.com/2012/04/16/arquillian-1-dot-0-0-dot-final-released-ready-for-glassfish-and-weblogic-death-to-all-bugs/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
</feed>
