<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Jimmy Tang]]></title>
  <link href="http://jcftang.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://jcftang.github.com/"/>
  <updated>2012-06-14T16:58:46+01:00</updated>
  <id>http://jcftang.github.com/</id>
  <author>
    <name><![CDATA[Jimmy Tang]]></name>
    <email><![CDATA[jcftang@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[git-annex assistant is being crowd funded on Kickstarter &rarr;]]></title>
<link href="http://git-annex.branchable.com/design/assistant/"/>
<updated>2012-06-04T11:50:00+01:00</updated>
<id>http://jcftang.github.com/blog/2012/06/04/git-annex-assistant-is-being-crowd-funded-on-kickstarter</id>

      <content type="html"><![CDATA[<p>It seems <a href="http://kitenet.net/~joey/">Joey Hess</a> is in the process of
getting <strong>git-annex assistant</strong> crowd funded. I had not been keeping
up to date too much in the last year with git-annex partly because it
met my needs and I never needed to upgrade to the latest tip.</p>

<p>There are a number of really cool features now which is making
git-annex more accessible. I particularly like how the merge and sync
workflows have now been pretty much <em>scripted</em> so there is less to go
wrong!</p>

<p>Once the <strong>Dropbox</strong> like features get implemented git-annex will be
pretty interesting, it won't be a complete <em>clone</em> of Dropbox due to
the way that git-annex deals with files (using symlinks), it will be a
pretty good alternative to Dropbox. I wish <em>smudge filters</em> were on
the roadmap as well.</p>

<p><a rel="bookmark" href="http://jcftang.github.com/blog/2012/06/04/git-annex-assistant-is-being-crowd-funded-on-kickstarter/">&infin; Permalink</a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[ceph gets a refresh &rarr;]]></title>
<link href="http://ceph.com/community/announcing-the-ceph-com-refresh/"/>
<updated>2012-05-19T13:08:00+01:00</updated>
<id>http://jcftang.github.com/blog/2012/05/19/ceph-gets-a-refresh</id>

      <content type="html"><![CDATA[<p>I've been keeping an eye on <em>ceph</em> for quite sometime now. It looks
like <em>ceph</em> is almost ready for production usage. There is now a
support infrastructure and a commercial company backing the
product. So far the OSD, MDS and MON components all run on Linux since
most of the implementation appears to be in the user land I wonder if
it will be ported to non-linux platforms. It's be quite nifty if one
could have a heterogeneous network of servers providing storage.</p>

<p>From first glance at shadowing one of the guys in work with this
filesystem, it looks good. It's missing some documentation right now
apart from that it's going to be a great competitor in the distributed
filesystems arena. It will shake up GPFS and Lustre for sure, it might
even give glusterfs a run for its money in the near future.</p>

<p><a rel="bookmark" href="http://jcftang.github.com/blog/2012/05/19/ceph-gets-a-refresh/">&infin; Permalink</a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[git-subtree is now in mainline git]]></title>
<link href="http://jcftang.github.com/blog/2012/05/02/git-subtree-is-now-in-mainline-git/"/>
<updated>2012-05-02T09:27:00+01:00</updated>
<id>http://jcftang.github.com/blog/2012/05/02/git-subtree-is-now-in-mainline-git</id>

      <content type="html"><![CDATA[<p>It seems that <a href="git://github.com/apenwarr/git-subtree.git">git-subtree</a>
has been merged into the mainline git project. <em>git-subtree</em> is one of
those really useful wrappers for manipulating git repositories if you
are an integrator or don't really like git-submodule. It certainly is
a nicer alternative to git-submodule. There is less chance of the
person cloning a git-subtree repository messing up the checkout because
they forgot to initialise the submodules. There is also the added
advantage of not needing to fiddle around scripting up the git-archive
commands for exporting the source tree for a release if you use
git-subtree; actually git-subtree is just plain useful.</p>

<p><a rel="bookmark" href="http://jcftang.github.com/blog/2012/05/02/git-subtree-is-now-in-mainline-git/">&infin; Permalink</a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Slurm User Group Meeting 2012 &rarr;]]></title>
<link href="http://www.bsc.es/marenostrum-support-services/hpc-events-trainings/others/slurm-user-group-meeting-2012"/>
<updated>2012-04-30T20:19:00+01:00</updated>
<id>http://jcftang.github.com/blog/2012/04/30/slurm-user-group-meeting-2012</id>

      <content type="html"><![CDATA[<p>This time the usergroup meeting is in BSC in Spain (this place is
cool, I've been at BSC for a few conferences and meetings before). I
wish I was doing some HPC right now, I'm very tempted to submit an
abstract or two on the last two things with slurm that I was involved
with.</p>

<p>The <a href="https://github.com/jcftang/php-slurm">php-slurm</a> package needs
some love, its somewhat in use at work. I just wish I had more time to
fix the memory leaks. There is also
<a href="https://github.com/jcftang/slurm-bank">slurm-bank</a> which is seeing
some good use in work, though it could do with a rewrite in C.</p>

<p><a rel="bookmark" href="http://jcftang.github.com/blog/2012/04/30/slurm-user-group-meeting-2012/">&infin; Permalink</a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[git rerere for long lived feature branches &rarr;]]></title>
<link href="http://progit.org/2010/03/08/rerere.html"/>
<updated>2012-03-11T11:45:00+00:00</updated>
<id>http://jcftang.github.com/blog/2012/03/11/git-rerere-for-long-lived-feature-branches</id>

      <content type="html"><![CDATA[<p>I turned this feature on for a few of my git repos but I had
completely forgotten about it. As far as I recall the feature has been
around for a few years now. It can be turned on globally by doing</p>

<pre><code>git config --global rerere.enabled 1
</code></pre>

<p>It pretty much automates the resolution of conflicts in long lived
branches. I've been lazy recently and I have just doing merges instead
rebasing, which lead me to re-discover <em>git rerere</em>.</p>

<p><a rel="bookmark" href="http://jcftang.github.com/blog/2012/03/11/git-rerere-for-long-lived-feature-branches/">&infin; Permalink</a></p>

]]></content>
    </entry>
  
</feed>

